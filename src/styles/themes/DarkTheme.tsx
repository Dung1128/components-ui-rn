import color from "color";

import { ThemeColors, tokens } from "./tokens";
import type { AppTheme } from "../../types";
import { LightTheme } from "./LightTheme";
import ink from "../../theme/ink";
import white from "../../theme/white";
import blue from "../../theme/blue";
import red from "../../theme/red";
import green from "../../theme/green";
import yellow from "../../theme/yellow";
import purple from "../../theme/purple";

const { palette, opacity } = tokens.md.ref;

export const DarkTheme: AppTheme = {
  ...LightTheme,
  dark: true,
  mode: "adaptive",
  version: 3,
  colors: {
    text_primary: palette.primary100,
    primary: palette.primary80,
    primaryContainer: palette.primary30,
    secondary: palette.secondary80,
    secondaryContainer: palette.secondary30,
    tertiary: palette.tertiary80,
    tertiaryContainer: palette.tertiary30,
    surface: palette.neutral10,
    surfaceVariant: palette.neutralVariant30,
    surfaceDisabled: color(palette.neutral90)
      .alpha(opacity.level2)
      .rgb()
      .string(),
    background: palette.neutral99,
    error: palette.error80,
    errorContainer: palette.error30,
    onPrimary: palette.primary20,
    onPrimaryContainer: palette.primary90,
    onSecondary: palette.secondary20,
    onSecondaryContainer: palette.secondary90,
    onTertiary: palette.tertiary20,
    onTertiaryContainer: palette.tertiary90,
    onSurface: palette.neutral90,
    onSurfaceVariant: palette.neutralVariant80,
    onSurfaceDisabled: color(palette.neutral90)
      .alpha(opacity.level4)
      .rgb()
      .string(),
    onError: palette.error20,
    onErrorContainer: palette.error80,
    onBackground: palette.neutral90,
    outline: palette.neutralVariant60,
    outlineVariant: palette.neutralVariant30,
    inverseSurface: palette.neutral90,
    inverseOnSurface: palette.neutral20,
    inversePrimary: palette.primary40,
    shadow: palette.neutral0,
    scrim: palette.neutral0,
    backdrop: color(ThemeColors.neutralVariant20).alpha(0.4).rgb().string(),
    elevation: {
      level0: "transparent",
      // Note: Color values with transparency cause RN to transfer shadows to children nodes
      // instead of View component in Surface. Providing solid background fixes the issue.
      // Opaque color values generated with `palette.primary80` used as background
      level1: "rgb(37, 35, 42)", // palette.primary80, alpha 0.05
      level2: "rgb(44, 40, 49)", // palette.primary80, alpha 0.08
      level3: "rgb(49, 44, 56)", // palette.primary80, alpha 0.11
      level4: "rgb(51, 46, 58)", // palette.primary80, alpha 0.12
      level5: "rgb(52, 49, 63)", // palette.primary80, alpha 0.14
    },
    //new theme colors
    backgroundPrimary: ink.INK5,
    backgroundSecondary: white.WHITE100,
    borderBrandDefault: blue.BLUE100,
    borderCriticalDefault: red.RED100,
    borderCriticalHover: red.RED80,
    borderCriticalPressed: red.RED120,
    borderErrorDefault: red.RED100,
    borderInfoDefault: blue.BLUE100,
    borderPrimaryDefault: ink.INK10,
    borderPrimaryDisabled: ink.INK10,
    borderPrimaryHovered: ink.INK20,
    borderPrimaryInverseDefault: blue.BLUE100,
    borderPrimaryPressed: ink.INK20,
    borderSuccessDefault: green.GREEN100,
    borderWarningDefault: yellow.YELLOW100,
    iconBrandDefault: blue.BLUE100,
    iconCriticalDefault: red.RED100,
    iconErrorDefault: red.RED100,
    iconInfoDefault: blue.BLUE100,
    iconPrimaryDefault: ink.INK40,
    iconPrimaryHover: ink.INK60,
    iconPrimaryDisabled: ink.INK60,
    iconPrimaryInverseDefault: white.WHITE100,
    iconPrimaryInverseHover: white.WHITE80,
    iconPrimaryInversePressed: white.WHITE80,
    iconPrimaryPressed: ink.INK60,
    iconSuccessDefault: green.GREEN100,
    iconWarningDefault: yellow.YELLOW100,
    surfaceBrandDefault: blue.BLUE100,
    surfaceBrandDisabled: ink.INK10,
    surfaceBrandHover: blue.BLUE80,
    surfaceBrandInverseDefault: blue.BLUE10,
    surfaceBrandInverseHover: blue.BLUE20,
    surfaceBrandInversePressed: blue.BLUE40,
    surfaceBrandPressed: blue.BLUE120,
    surfaceCriticalDefault: red.RED100,
    surfaceCriticalDisabled: ink.INK10,
    surfaceCriticalHover: red.RED80,
    surfaceCriticalInverseDefault: red.RED10,
    surfaceCriticalInverseHover: red.RED20,
    surfaceCriticalInversePressed: red.RED40,
    surfaceCriticalPressed: red.RED120,
    surfaceErrorDefault: red.RED100,
    surfaceErrorDisabled: ink.INK10,
    surfaceErrorHover: red.RED80,
    surfaceErrorInverseDefault: red.RED10,
    surfaceErrorInverseHover: red.RED20,
    surfaceErrorInversePressed: red.RED40,
    surfaceErrorPressed: red.RED_STATUS,
    surfaceInfoDefault: blue.BLUE100,
    surfaceInfoDisabled: ink.INK10,
    surfaceInfoHover: blue.BLUE80,
    surfaceInfoInverseDefault: blue.BLUE10,
    surfaceInfoInverseHover: blue.BLUE20,
    surfaceInfoInversePressed: blue.BLUE40,
    surfaceInfoPressed: blue.BLUE120,
    surfacePrimaryDefault: white.WHITE100,
    surfacePrimaryDisabled: ink.INK5,
    surfacePrimaryHover: ink.INK5,
    surfacePrimaryInverseDefault: ink.INK80,
    surfacePrimaryInverseHover: ink.INK60,
    surfacePrimaryInversePressed: ink.INK40,
    surfacePrimaryPressed: ink.INK10,
    surfaceSecondaryDefault: ink.INK5,
    surfaceSecondaryDisabled: ink.INK5,
    surfaceSecondaryHover: ink.INK10,
    surfaceSecondaryPressed: ink.INK20,
    surfaceSuccessDefault: green.GREEN100,
    surfaceSuccessDisabled: ink.INK10,
    surfaceSuccessHover: green.GREEN80,
    surfaceSuccessInverseDefault: green.GREEN10,
    surfaceSuccessInverseHover: green.GREEN20,
    surfaceSuccessInversePressed: green.GREEN40,
    surfaceSuccessPressed: green.GREEN_STATUS,
    surfaceWarningDefault: yellow.YELLOW100,
    surfaceWarningDisabled: ink.INK10,
    surfaceWarningHover: yellow.YELLOW80,
    surfaceWarningInverseDefault: yellow.YELLOW10,
    surfaceWarningInverseHover: yellow.YELLOW20,
    surfaceWarningInversePressed: yellow.YELLOW40,
    surfaceWarningPressed: yellow.YELLOW120,
    textDefault: ink.INK100,
    textDisabled: ink.INK20,
    textPlaceholder: ink.INK40,
    textSecondary: ink.INK60,
    textBrandDefault: blue.BLUE100,
    textBrandDisabled: ink.INK20,
    textBrandHovered: blue.BLUE80,
    textBrandPressed: blue.BLUE120,
    textCriticalDefault: red.RED100,
    textCriticalDisabled: ink.INK20,
    textCriticalHovered: red.RED80,
    textCriticalPressed: red.RED_STATUS,
    textErrorDefault: red.RED100,
    textErrorDisabled: ink.INK20,
    textErrorHovered: red.RED80,
    textErrorPressed: red.RED_STATUS,
    textInfoDefault: blue.BLUE100,
    textInfoDisabled: ink.INK20,
    textInfoHovered: blue.BLUE80,
    textInfoPressed: blue.BLUE120,
    textLinkDefault: blue.BLUE100,
    textLinkDisabled: ink.INK20,
    textLinkHovered: blue.BLUE80,
    textLinkPressed: blue.BLUE120,
    textLinkVisitedDefault: purple.PURPLE100,
    textLinkVisitedDisabled: purple.PURPLE_BG,
    textLinkVisitedHovered: purple.PURPLE_BG,
    textLinkVisitedPressed: purple.PURPLE_BG,
    textOnFillDefault: white.WHITE100,
    textOnFillDisabled: white.WHITE20,
    textOnFillHovered: white.WHITE80,
    textOnFillPressed: white.WHITE80,
    textSuccessDefault: green.GREEN100,
    textSuccessDisabled: ink.INK20,
    textSuccessHovered: green.GREEN80,
    textSuccessPressed: green.GREEN_STATUS,
    textWarningDefault: yellow.YELLOW100,
    textWarningDisabled: ink.INK20,
    textWarningHovered: yellow.YELLOW80,
    textWarningPressed: yellow.YELLOW_STATUS,
    selectBackgroundDisabled: white.WHITE40,
    selectIconDisabled: white.WHITE40,
    borderCriticalInverseDefault: red.RED40,
    borderCriticalInverseHover: red.RED20,
    borderCriticalInversePressed: red.RED60,
    borderErrorInverseDefault: red.RED40,
    borderPrimaryFocused: blue.BLUE100,
    borderWarningInverseDefault: yellow.YELLOW40,
    borderSuccessInverseDefault: green.GREEN40,
  },
};
